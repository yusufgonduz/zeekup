# render.yaml â€” Mastodon (Blueprint)
# Servisler: web (Rails/Puma), streaming (Node.js), sidekiq (jobs)
# Kaynaklar: Postgres (Blueprint ile), Redis (UI'dan eklenecek)

services:
  - type: web
    name: mastodon-web
    env: ruby
    plan: starter
    buildCommand: |
      bundle install -j4
      yarn install --pure-lockfile
      RAILS_ENV=production bundle exec rails assets:precompile
    preDeployCommand: RAILS_ENV=production bundle exec rails db:migrate
    startCommand: bundle exec puma -C config/puma.rb
    healthCheckPath: /health
    autoDeploy: true
    envVars:
      - key: RAILS_ENV
        value: production
      - key: LOCAL_DOMAIN
        value: your-domain.com
      - key: SECRET_KEY_BASE
        generateValue: true
      - key: OTP_SECRET
        generateValue: true
      - key: DATABASE_URL
        fromDatabase:
          name: mastodon-db
          property: connectionString
      - key: REDIS_URL
        sync: false
      - key: SMTP_SERVER
        value: smtp.yourprovider.com
      - key: SMTP_PORT
        value: 587
      - key: SMTP_LOGIN
        value: you@your-domain.com
      - key: SMTP_PASSWORD
        sync: false
      - key: SMTP_FROM_ADDRESS
        value: "Mastodon <no-reply@your-domain.com>"
      - key: SMTP_AUTH_METHOD
        value: plain
      - key: SMTP_ENABLE_STARTTLS
        value: true
      - key: VAPID_PUBLIC_KEY
        sync: false
      - key: VAPID_PRIVATE_KEY
        sync: false
      - key: STREAMING_API_BASE_URL
        value: wss://YOUR_STREAMING_HOSTNAME
      - key: RAILS_SERVE_STATIC_FILES
        value: true

  - type: worker
    name: mastodon-sidekiq
    env: ruby
    plan: starter
    buildCommand: |
      bundle install -j4
      yarn install --pure-lockfile
    startCommand: bundle exec sidekiq -q default -q mailers -q pull -q push
    autoDeploy: true
    envVars:
      - key: RAILS_ENV
        value: production
      - key: LOCAL_DOMAIN
        value: your-domain.com
      - key: SECRET_KEY_BASE
        fromService:
          name: mastodon-web
          type: web
          envVarKey: SECRET_KEY_BASE
      - key: OTP_SECRET
        fromService:
          name: mastodon-web
          type: web
          envVarKey: OTP_SECRET
      - key: DATABASE_URL
        fromDatabase:
          name: mastodon-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: mastodon-web
          type: web
          envVarKey: REDIS_URL

  - type: web
    name: mastodon-streaming
    env: node
    plan: starter
    buildCommand: |
      yarn install --pure-lockfile
    startCommand: node ./streaming/index.js
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: LOCAL_DOMAIN
        value: your-domain.com
      - key: DATABASE_URL
        fromDatabase:
          name: mastodon-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: mastodon-web
          type: web
          envVarKey: REDIS_URL

databases:
  - name: mastodon-db
    plan: starter
    databaseName: mastodon
    user: mastodon
